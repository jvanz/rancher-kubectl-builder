name: Build and sign
on:
  schedule:
    - cron: '0 14 * * *'
  workflow_dispatch:

jobs:
  build-and-sign:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      id-token: write
    steps:
      -
        uses: oprypin/find-latest-tag@e6d7a96b985a7dda6080e43e12771ad3a90fd389 # v1.1.0
        with:
          repository: rancher/kubectl
          releases-only: true # only those tags with a GH release
        id: rancher-kubectl
      -
        run: echo "rancher/kubectl is at version ${{ steps.rancher-kubectl.outputs.tag }}"
      -
        name: Stop if ${{ github.repository_owner }}/kubectl:${{ steps.rancher-kubectl.outputs.tag }} in repo already
        id: check-in-repo
        run: |
          # fake no-op token, image is public
          TOKEN=$(curl https://ghcr.io/token\?scope\="repository:${{ github.repository_owner }}/kubectl:pull" | jq .token | tr -d \")
          if curl -H "Authorization: Bearer $TOKEN" https://ghcr.io/v2/${{ github.repository_owner }}/kubectl/tags/list \
               | grep \"${{ steps.rancher-kubectl.outputs.tag }}\";
          then
              echo "${{ github.repository_owner }}/kubectl:${{ steps.rancher-kubectl.outputs.tag }} is in repo already"
              echo "image-exists=true" >> $GITHUB_ENV
          fi
      -
        uses: actions/checkout@v3
        if: env.image-exists != 'true'
        with:
          repository: rancher/kubectl
          ref: ${{ steps.rancher-kubectl.outputs.tag }}
      -
        name: Set up Docker Buildx
        if: env.image-exists != 'true'
        uses: docker/setup-buildx-action@v1
      -
        name: Login to GitHub Container Registry
        if: env.image-exists != 'true'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Build and push tagged container image for amd64
        if: env.image-exists != 'true'
        uses: docker/build-push-action@v2
        with:
          build-args: |
            KUBERNETES_RELEASE=${{ steps.rancher-kubectl.outputs.tag }}
            ARCH=amd64
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/kubectl:${{ steps.rancher-kubectl.outputs.tag }}-amd64
      -
        name: Build and push tagged container image for arm64
        if: env.image-exists != 'true'
        uses: docker/build-push-action@v2
        with:
          build-args: |
            KUBERNETES_RELEASE=${{ steps.rancher-kubectl.outputs.tag }}
            ARCH=arm64
          context: .
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/kubectl:${{ steps.rancher-kubectl.outputs.tag }}-arm64
      -
        name: Create final multiarch tag
        id: build-final-tag
        if: env.image-exists != 'true'
        run: |
          docker manifest create \
            ghcr.io/${{ github.repository_owner }}/kubectl:${{ steps.rancher-kubectl.outputs.tag }} \
            --amend ghcr.io/${{ github.repository_owner }}/kubectl:${{ steps.rancher-kubectl.outputs.tag }}-amd64 \
            --amend ghcr.io/${{ github.repository_owner }}/kubectl:${{ steps.rancher-kubectl.outputs.tag }}-arm64

          DIGEST=$(docker manifest push ghcr.io/${{ github.repository_owner }}/kubectl:${{ steps.rancher-kubectl.outputs.tag }})
          echo "digest=$DIGEST" >> $GITHUB_ENV
      -
        uses: sigstore/cosign-installer@main
        if: env.image-exists != 'true'
      -
        name: Sign the images for releases
        if: env.image-exists != 'true'
        run: |
          cosign sign \
            ghcr.io/${{ github.repository_owner }}/kubectl@${{ env.digest }}
        env:
          COSIGN_EXPERIMENTAL: 1
